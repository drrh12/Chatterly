rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    // Users can:
    // - Create their own profile (though we'll use a function, this rule allows direct creation if needed for specific flows)
    // - Read their own profile fully
    // - Update their own profile (name, languages, blockedUsers)
    // - Read specific, non-sensitive fields of other users for discovery purposes
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allows reading for discovery, consider restricting fields later
      allow update: if request.auth != null && request.auth.uid == userId;
      // No delete for now to preserve user data, can be implemented via a function if needed
      allow delete: if false;
    }

    // Chats collection
    // Users can:
    // - Read chats they are a participant in
    // - Create chats (though we'll primarily use a function, this allows for it if structure is correct)
    match /chats/{chatId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.users;
      // Chat creation will be handled by a Cloud Function to ensure atomicity and prevent duplicates.
      // If allowing direct client creation, ensure request.auth.uid is one of the users.
      allow create: if request.auth != null && request.auth.uid in request.resource.data.users && request.resource.data.users.size() == 2;
      // Updates to chats (e.g., last message) might be handled by functions or restricted.
      allow update: if false; // For now, let functions handle chat updates like lastMessage
      allow delete: if false; // Chats are generally not deleted by users directly
    }

    // Messages subcollection within a chat
    // Users can:
    // - Read messages in chats they are part of
    // - Create messages in chats they are part of, and they must be the sender
    match /chats/{chatId}/messages/{messageId} {
      allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
      allow create: if request.auth != null && 
                       request.resource.data.senderId == request.auth.uid &&
                       request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users;
      allow update: if false; // Messages are typically immutable
      allow delete: if false; // Messages are typically not deleted by users directly
    }
  }
} 